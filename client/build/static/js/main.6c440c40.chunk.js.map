{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/common/Logo/Logo.js","components/layouts/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layouts/PageContainer/PageContainer.js","components/layouts/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/pages/Contact/ContactPage.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/layouts/PostSummary/PostSummary.js","utils/functions.js","components/layouts/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/pages/NotFound/NotFoundPage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPost.js","components/pages/EditPost/EditPost.js","components/features/PostItem/PostItem.js","components/features/PostItem/PostItemContainer.js","components/pages/SinglePost/SinglePost.js","components/pages/RandomPost/RandomPost.js","App.js","index.js"],"names":["API_URL","createActionName","name","LOAD_POSTS","LOAD_POST","LOAD_POST_PAGE","START_REQUEST","STOP_REQUEST","ERROR_REQUEST","RESET_REQUEST","loadPostsByPage","payload","type","startRequest","stopRequest","errorRequest","error","getPosts","posts","data","getPost","singlePost","getPages","Math","ceil","amount","postsPerPage","getRequest","request","initialState","pending","success","presentPage","rootReducer","combineReducers","statePart","action","post","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Logo","links","location","className","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","PageContainer","children","MainLayout","PageTitle","ContactPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","result","substr","lastIndexOf","cutText","PostsList","Spinner","animationIn","animationOut","Alert","icon","Pagination","isActive","undefined","initialPage","leftArrowIsHidden","rightArrowIsHidden","changePage","newPage","onPageChange","setState","changeWithArrow","isLeft","a","pages","hidden","onClick","Array","element","page","Posts","loadPostsPage","pagination","selectedPage","connect","dispatch","startA","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","NotFoundPage","PostsCounter","quantity","PostsPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","event","target","handleEditor","text","addPost","preventDefault","updatePost","isEdit","resetRequest","postToEdit","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","put","then","catch","err","updatePostRequest","AddPost","EditPost","PostItem","singleHandling","loadPost","randomHandling","loadPosts","round","random","isRandom","appId","href","loadPostRequest","SinglePost","match","params","RandomPost","App","exact","component","Home","exac","Contact","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c440c40.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:8000/api';\nexport const BASE_URL = 'http://localhost:3000/';\n","import axios from 'axios';\nimport {API_URL} from \"../config\";\n\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_POST = createActionName('LOAD_POST');\nexport const LOAD_POST_PAGE = createActionName('LOAD_POST_PAGE');\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const STOP_REQUEST = createActionName('STOP_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\n\nexport const loadPosts = payload => ({payload, type: LOAD_POSTS});\nexport const loadPost = post => ({post, type: LOAD_POST});\nexport const loadPostsByPage = payload => ({payload, type: LOAD_POST_PAGE});\nexport const startRequest = () => ({type: START_REQUEST});\nexport const stopRequest = () => ({type: STOP_REQUEST});\nexport const errorRequest = error => ({error, type: ERROR_REQUEST});\nexport const resetRequest = () => ({type: RESET_REQUEST});\n\nexport const getPosts = ({posts}) => posts.data;\nexport const getPost = ({posts}) => posts.singlePost;\nexport const getPages = ({posts}) => Math.ceil(posts.amount / posts.postsPerPage);\nexport const getPresentPage = ({posts}) => posts.presentPage;\nexport const getQuantityOfPosts = ({posts}) => posts.data.length;\nexport const getRequest = ({posts}) => posts.request;\n\n/*THUNKS*/\nexport const loadPostsRequest = () => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/posts`);\n            dispatch(loadPosts(res.data));\n            dispatch(stopRequest());\n        } catch (e) {\n            dispatch(errorRequest(e.message));\n        }\n    }\n};\n\nexport const loadPostRequest = id => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n            let res = await axios.get(`${API_URL}/posts/${id}`);\n\n            if (res.data !== null) {\n                dispatch(loadPost(res.data));\n                dispatch(stopRequest());\n            } else {\n                dispatch(errorRequest(`Post with id:${id} don't exist`));\n            }\n\n        } catch (e) {\n            dispatch(errorRequest(e.message));\n        }\n    }\n};\n\nexport const addPostRequest = post => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n            await axios.post(`${API_URL}/posts`, post);\n            dispatch(stopRequest());\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const updatePostRequest = post => {\n    return async dispatch => {\n\n        dispatch(startRequest());\n\n        try {\n            await axios.put(`${API_URL}/posts`, post)\n                .then(() => dispatch(stopRequest()))\n                .catch(err => dispatch(errorRequest(err.message)));\n        } catch (err) {\n            dispatch(errorRequest(err.message))\n        }\n    }\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\n    return async dispatch => {\n        dispatch(startRequest());\n\n        try {\n            const startA = (page - 1) * postsPerPage;\n            const limit = postsPerPage;\n\n            let res = await axios.get(`${API_URL}/posts/range/${startA}/${limit}`);\n\n            const payload = {\n                posts: res.data.posts,\n                amount: res.data.amount,\n                postsPerPage,\n                presentPage: page\n            };\n\n            dispatch(loadPostsByPage(payload));\n            dispatch(stopRequest());\n\n        } catch (err) {\n            dispatch(errorRequest(err.message));\n        }\n    }\n};\n\nconst initialState = {\n    data: [],\n    request: {\n        pending: false,\n        error: null,\n        success: null\n    },\n    singlePost: {},\n    amount: 0,\n    postsPerPage: 10,\n    presentPage: 1\n};\n\nexport default function reducer(statePart = initialState, action = {}) {\n    switch (action.type) {\n        case LOAD_POSTS:\n            return {...statePart, data: action.payload};\n        case LOAD_POST:\n            return {...statePart, singlePost: action.post};\n        case LOAD_POST_PAGE:\n            return {\n                ...statePart,\n                presentPage: action.payload.presentPage,\n                postsPerPage: action.payload.postsPerPage,\n                amount: action.payload.amount,\n                data: [...action.payload.posts]\n            };\n        case START_REQUEST:\n            return {...statePart, request: {pending: true, error: null, success: null}};\n        case STOP_REQUEST:\n            return {...statePart, request: {pending: false, error: null, success: true}};\n        case ERROR_REQUEST:\n            return {...statePart, request: {pending: false, error: action.error, success: false}};\n        case RESET_REQUEST:\n            return {...statePart, request: {pending: false, error: null, success: null}};\n        default:\n            return statePart;\n    }\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\nimport thunk from 'redux-thunk';\nimport posts from './postsRedux';\n\nconst rootReducer = combineReducers({\n    posts\n});\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ));\n\nexport default store;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\nimport Logo from '../../common/Logo/Logo';\nimport MainMenu from '../../layouts/MainMenu/MainMenu';\nimport './NavBar.scss';\n\nclass NavBar extends React.Component {\n\n    state = {\n        links: [\n            {path: '/', title: 'Home'},\n            {path: '/posts/new', title: 'Add post'},\n            {path: '/posts', title: 'Posts'},\n            {path: '/posts/random', title: 'Random post'},\n            {path: '/contact', title: 'Contact'}\n        ]\n    };\n\n    render() {\n        const {links} = this.state;\n        return (\n            <nav className=\"navbar\">\n                <Logo/>\n                <MainMenu links={links}/>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport NavBar from '../../features/NavBar/NavBar';\nimport PageContainer from '../../layouts/PageContainer/PageContainer';\n\nconst MainLayout = ({children}) => (\n    <div>\n        <PageContainer>\n            <NavBar/>\n            {children}\n        </PageContainer>\n    </div>\n);\n\nexport default MainLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () =>\n    <div>\n        <PageTitle>Contact</PageTitle>\n        <p>Your Favourite Blooger Ltd.</p>\n        <p>9432 Division Street</p>\n        <p>Stone Mountain, GA 30083</p>\n        <p>Mobile Number: 207-914-3411</p>\n    </div>;\n\nexport default ContactPage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({children, ...otherProps}) => (\n    <div {...otherProps} className=\"html-box\">\n        {ReactHtmlParser(children)}\n    </div>\n);\n\nHtmlBox.propTypes = {\n    children: PropTypes.string\n};\n\nexport default HtmlBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostSummary.scss';\nimport Button from '../../common/Button/Button';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport {cutText} from \"../../../utils/functions\";\nimport {Link} from 'react-router-dom';\n\nconst PostSummary = ({id, title, content, author}) => (\n    <article className=\"post-summary\">\n        <SmallTitle>{title}</SmallTitle>\n        <p>Author: {author}</p>\n        <HtmlBox>{cutText(content, 60)}</HtmlBox>\n        <Link to={'/posts/' + id}>\n            <Button variant=\"primary\">Read More</Button>\n        </Link>\n    </article>\n);\n\nPostSummary.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired\n};\n\nexport default PostSummary;\n","export const cutText = (content, maxLength) => {\n\n    if (maxLength > 0) {\n        if (content.length > maxLength) {\n            let result = content.substr(0, maxLength);\n            return result.substr(0, result.lastIndexOf(\" \")) + '...';\n        } else {\n            return content;\n        }\n    } else {\n        return 'Error';\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostSummary from '../PostSummary/PostSummary';\n\nconst PostsList = ({posts}) => (\n    <div>\n        <section className=\"posts-list\">\n            {posts.map(post => <PostSummary key={post.id} {...post}/>)}\n        </section>\n    </div>\n);\n\nPostsList.propTypes = {\n    posts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n            author: PropTypes.string.isRequired\n        }))\n};\n\nexport default PostsList;\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n\nclass Pagination extends React.Component {\n\n    state = {\n        isActive: this.props.isActive === undefined || this.props.isActive,\n        presentPage: this.props.initialPage,\n        leftArrowIsHidden: true,\n        rightArrowIsHidden: false\n    };\n\n    componentDidMount() {\n\n        const {initialPage, pages} = this.props;\n        initialPage > 1 ? this.setState({leftArrowIsHidden: false}) :\n            this.setState({leftArrowIsHidden: true});\n        initialPage < pages ? this.setState({rightArrowIsHidden: false}) :\n            this.setState({rightArrowIsHidden: true})\n    }\n\n    changePage = newPage => {\n        const {onPageChange} = this.props;\n\n        this.setState({presentPage: newPage});\n        onPageChange(newPage);\n    };\n\n    changeWithArrow = async isLeft => {\n        const {presentPage} = this.state;\n        const {onPageChange} = this.props;\n        isLeft ? await this.setState({presentPage: presentPage - 1}) :\n            await this.setState({presentPage: presentPage + 1});\n        onPageChange(this.state.presentPage);\n    };\n\n    render() {\n        const {pages} = this.props;\n        const {presentPage, leftArrowIsHidden, rightArrowIsHidden, isActive} = this.state;\n        const {changePage, changeWithArrow} = this;\n\n        return (\n            <div hidden={!isActive} className=\"pagination\">\n                <ul className=\"pagination__list\">\n                    <li className={`pagination__list__item`}\n                        onClick={() => changeWithArrow(true)}\n                        hidden={leftArrowIsHidden}>{\"<\"}</li>\n                    {[...Array(pages)].map((element, page) =>\n                        <li\n                            key={++page}\n                            onClick={() => changePage(page)}\n                            className={`pagination__list__item${((page) === presentPage) ?\n                                ' pagination__list__item--active' : ''}`}>\n                            {page}\n                        </li>\n                    )}\n                    <li className={`pagination__list__item`}\n                        onClick={() => changeWithArrow(false)}\n                        hidden={rightArrowIsHidden}>{\">\"}</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nPagination.propTypes = {\n    pages: PropTypes.number.isRequired,\n    initialPage: PropTypes.number,\n    onPageChange: PropTypes.func.isRequired,\n    isActive: PropTypes.bool\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostsList from '../../layouts/PostsList/PostsList';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport Pagination from '../../common/Pagination/Pagination';\n\nclass Posts extends React.Component {\n\n    componentDidMount() {\n        const {loadPostsByPage, initialPage, postsPerPage} = this.props;\n        initialPage !== undefined ? loadPostsByPage(initialPage, postsPerPage || 3) :\n            loadPostsByPage(1, postsPerPage || 3);\n    }\n\n    loadPostsPage = page => {\n        const {loadPostsByPage, postsPerPage} = this.props;\n        loadPostsByPage(page, postsPerPage || 3);\n    };\n\n    render() {\n        const {posts, request, pages, initialPage, pagination, selectedPage} = this.props;\n        const {loadPostsPage} = this;\n        \n        if (!request.pending && request.success && posts.length > 0) {\n            return (\n                <div>\n                    <PostsList posts={posts}/>\n                    <Pagination pages={pages} onPageChange={loadPostsPage}\n                                initialPage={initialPage !== undefined ? initialPage : selectedPage}\n                                isActive={pagination}/>\n                </div>\n            )\n\n        } else if (request.pending || request.success === null) {\n            return <Spinner/>;\n        } else if (!request.pending && request.error !== null) {\n            return <Alert variant=\"error\">{request.error}</Alert>;\n        } else if (!request.pending && request.success && posts.length === 0) {\n            return <Alert variant=\"info\">No posts</Alert>\n        }\n    }\n}\n\nPosts.propTypes = {\n    posts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n            author: PropTypes.string.isRequired\n        })\n    ),\n    loadPostsByPage: PropTypes.func,\n    initialPage: PropTypes.number,\n    selectedPage: PropTypes.number,\n    postsPerPage: PropTypes.number,\n    pagination: PropTypes.bool\n};\n\nexport default Posts;\n","import {connect} from 'react-redux';\nimport {getPosts, loadPostsByPageRequest, getRequest, getPages, getPresentPage} from \"../../../redux/postsRedux\";\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n    posts: getPosts(state),\n    request: getRequest(state),\n    pages: getPages(state),\n    selectedPage: getPresentPage(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () =>\n    <div>\n        <PageTitle>Blog</PageTitle>\n        <Posts postsPerPage={3} pagination={false}/>\n    </div>;\n\nexport default HomePage;\n","import React from 'react';\n\nconst NotFoundPage = props =>\n    <div>\n        <h1>404 - Page Not Found</h1>\n    </div>;\n\nexport default NotFoundPage;\n","import React from 'react'\n\nclass PostsCounter extends React.Component {\n    render() {\n        const {quantity} = this.props;\n        return (\n            quantity !== 0 ? <div>{`Posts amount: ${quantity}`}</div> : <div>- no posts -</div>\n        )\n    }\n}\n\nexport default PostsCounter;\n","import {connect} from 'react-redux';\nimport {getQuantityOfPosts} from \"../../../redux/postsRedux\";\nimport PostsCounter from './PostsCounter';\n\nconst mapStateToProps = state => ({\n    quantity: getQuantityOfPosts(state)\n});\n\nexport default connect(mapStateToProps)(PostsCounter);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\n\nconst PostsPage = () =>\n    <div>\n        <PageTitle>Posts list</PageTitle>\n        <PostsCounter/>\n        <Posts/>\n    </div>;\n\nexport default PostsPage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport Button from '../../common/Button/Button';\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n\n    state = {\n        post: {\n            id: '',\n            title: '',\n            author: '',\n            content: ''\n        }\n    };\n\n    componentDidMount() {\n        const {isEdit, resetRequest, getPost} = this.props;\n        resetRequest();\n\n        if (isEdit) {\n            let postToEdit = getPost;\n            this.setState({\n                post: {\n                    id: postToEdit.id,\n                    title: postToEdit.title,\n                    author: postToEdit.author,\n                    content: postToEdit.content\n                }});\n        }\n    }\n\n    handleChange = event => {\n      const {post} = this.state;\n      this.setState({post: {...post, [event.target.name]: event.target.value}});\n    };\n\n    handleEditor = text => {\n        const {post} = this.state;\n        this.setState({post: {...post, content: text}});\n    };\n\n    addPost = event => {\n        const {addPost} = this.props;\n        const {post} = this.state;\n        event.preventDefault();\n        let newPost = {\n            title: post.title,\n            author: post.author,\n            content: post.content\n        };\n        addPost(newPost);\n    };\n\n    updatePost = event => {\n        const {updatePost} = this.props;\n        const {post} = this.state;\n        event.preventDefault();\n        updatePost(post);\n    };\n\n    render() {\n        const {post} = this.state;\n        const {handleChange, handleEditor, addPost, updatePost} = this;\n        const {request, isEdit} = this.props;\n\n        if (request.error) return <Alert variant=\"error\">{request.error}</Alert>;\n        else if (request.success) return <Alert variant=\"success\">{isEdit ? \"Post has been updated!\" : \"Post has been added!\"}</Alert>\n        else if (request.pending) return <Spinner/>;\n        else return (\n            <form onSubmit={isEdit ? updatePost : addPost}>\n                <TextField label=\"Title\" value={post.title} onChange={handleChange} name=\"title\"/>\n                <TextField label=\"Author\" value={post.author} onChange={handleChange} name=\"author\"/>\n                <SectionTitle>Edit post content</SectionTitle>\n                <Editor className='content-editor' text={post.content} onChange={handleEditor}\n                        options={{\n                            placeholder: false, toolbar:\n                                {buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3']}\n                        }}/>\n                <Button variant=\"primary\">{isEdit ? \"Update post\" : \"Add post\"}</Button>\n            </form>\n        )\n    }\n}\n\nPostForm.propTypes = {\n    request: PropTypes.object.isRequired,\n    addPost: PropTypes.func.isRequired,\n    resetRequest: PropTypes.func.isRequired,\n    isEdit: PropTypes.bool\n};\n\nexport default PostForm;\n","import {connect} from 'react-redux';\nimport {\n    addPostRequest,\n    getRequest,\n    resetRequest,\n    getPost,\n    updatePostRequest} from \"../../../redux/postsRedux\";\nimport PostForm from './PostForm';\n\nconst mapDispatchToProps = dispatch => ({\n    addPost: post => dispatch(addPostRequest(post)),\n    resetRequest: () => dispatch(resetRequest()),\n    updatePost: post => dispatch(updatePostRequest(post))\n});\n\nconst mapStateToProps = state => ({\n    request: getRequest(state),\n    getPost: getPost(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\n","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst AddPost = () =>\n    <div>\n        <PageTitle>Add Post</PageTitle>\n        <PostForm isEdit={false}/>\n    </div>;\n\nexport default AddPost;\n","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst EditPost = () => (\n    <div>\n        <PageTitle>Edit Post</PageTitle>\n        <PostForm isEdit={true}/>\n    </div>\n);\n\nexport default EditPost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FacebookProvider, Comments, ShareButton} from 'react-facebook';\nimport {FaShare} from \"react-icons/fa\";\nimport {withRouter} from 'react-router-dom';\nimport {BASE_URL} from \"../../../config\";\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from \"../../common/Alert/Alert\";\nimport Button from '../../common/Button/Button';\nimport {Link} from \"react-router-dom\";\nimport Facebook from \"react-facebook/module/FacebookProvider\";\n\nclass PostItem extends React.Component {\n\n    state = {\n        singlePost: {}\n    };\n\n    componentDidMount() {\n        const {isRandom} = this.props;\n        const {randomHandling, singleHandling} = this;\n        isRandom ? randomHandling() : singleHandling();\n    }\n\n    singleHandling = async () => {\n        const {loadPost, id} = this.props;\n        await loadPost(id);\n        this.setState({singlePost: this.props.singlePost})\n    };\n\n    randomHandling = async () => {\n        const {loadPost, loadPosts} = this.props;\n        await loadPosts();\n        let posts = this.props.posts;\n        await loadPost(posts[Math.round(Math.random() * (posts.length - 1))].id);\n        this.setState({singlePost: this.props.singlePost});\n    };\n\n    render() {\n        const {singlePost} = this.state;\n        const {request, location} = this.props;\n\n        if (!request.pending && request.success) {\n            return (\n                <div>\n                    <SmallTitle>{singlePost.title}</SmallTitle>\n                    <FacebookProvider appId=\"710139419429929\">\n                        <ShareButton className=\"button\" href={`${BASE_URL}${location.pathname}`}>\n                            <FaShare title=\"share\" />\n                        </ShareButton>\n                    </FacebookProvider>\n                    <p>Author: {singlePost.author}</p>\n                    <HtmlBox>{singlePost.content}</HtmlBox>\n                    <Link to=\"/posts/edit\">\n                        <Button variant=\"info\">Edit post</Button>\n                    </Link>\n                    <FacebookProvider appId=\"710139419429929\">\n                        <Comments href={`${BASE_URL}${location.pathname}`}/>\n                    </FacebookProvider>\n                </div>\n            )\n        } else if (request.pending || request.success === null) {\n            return <Spinner/>\n        } else if (!request.pending && request.error !== null) {\n            return <Alert variant=\"error\">{request.error}</Alert>;\n        } else if (!request.pending && request.success === false && request.error === null) {\n            return <Alert variant=\"warning\">Post don't exist</Alert>\n        }\n    }\n}\n\nPostItem.propTypes = {\n    singlePost: PropTypes.shape({\n        id: PropTypes.string,\n        title: PropTypes.string,\n        content: PropTypes.string,\n        author: PropTypes.string\n    }),\n    loadPost: PropTypes.func,\n    loadPosts: PropTypes.func,\n    isRandom: PropTypes.bool,\n    posts: PropTypes.array\n};\n\nexport default withRouter(props => <PostItem {...props}/>);\n","import {connect} from 'react-redux';\nimport {getPost, loadPostRequest, getRequest, loadPostsRequest, getPosts} from \"../../../redux/postsRedux\";\nimport PostItem from './PostItem';\n\nconst mapStateToProps = state => ({\n    singlePost: getPost(state),\n    request: getRequest(state),\n    posts: getPosts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadPost: id => dispatch(loadPostRequest(id)),\n    loadPosts: () => dispatch(loadPostsRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostItem from '../../features/PostItem/PostItemContainer';\n\nconst SinglePost = props => (\n    <div>\n        <PageTitle>SinglePost</PageTitle>\n        <PostItem id={props.match.params.id}/>\n    </div>\n);\n\nSinglePost.propTypes = {\n    id: PropTypes.string\n};\n\nexport default SinglePost;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostItem from '../../features/PostItem/PostItemContainer';\n\nconst RandomPost = () => (\n    <div>\n        <PageTitle>Random Post</PageTitle>\n        <PostItem isRandom={true}/>\n    </div>\n);\n\nexport default RandomPost;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport MainLayout from './components/layouts/MainLayout/MainLayout';\nimport Contact from './components/pages/Contact/ContactPage';\nimport Home from './components/pages/Home/HomePage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport AddPost from './components/pages/AddPost/AddPost';\nimport EditPost from './components/pages/EditPost/EditPost';\nimport SinglePost from './components/pages/SinglePost/SinglePost';\nimport RandomPost from './components/pages/RandomPost/RandomPost';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <MainLayout>\n                    <Switch>\n                        <Route path='/' exact component={Home} />\n                        <Route path='/posts' exact component={Posts} />\n                        <Route path='/posts/new' exact component={AddPost} />\n                        <Route path='/posts/edit' exac component={EditPost}/>\n                        <Route path='/posts/random' exac component={RandomPost}/>\n                        <Route path='/contact' exact component={Contact} />\n                        <Route path='/posts/:id' exact component={SinglePost} />\n                        <Route component={NotFound}/>\n                    </Switch>\n                </MainLayout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\n\nconst Root = () => (\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(<Root/>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}